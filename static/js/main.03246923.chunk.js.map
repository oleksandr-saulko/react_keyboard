{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","isKeyNotPressed","handleKeyup","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,GACZC,iBAAiB,GAHrB,EAcEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZJ,WAAYG,EAAME,IAClBJ,iBAAiB,KAjBvB,uDAME,WACEK,SAASC,iBAAiB,QAASC,KAAKN,eAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAX/C,oBAqBE,WACE,MAAwCM,KAAKT,MAArCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,gBAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EACG,0BADY,mCAEgBD,EAFhB,aA3B1B,GAAyBW,a,MCFzBC,IAASC,OAAO,cAAC,EAAD,IAASP,SAASQ,eAAe,W","file":"static/js/main.03246923.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n  isKeyNotPressed: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n    isKeyNotPressed: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n      isKeyNotPressed: false,\n    });\n  };\n\n  render() {\n    const { pressedKey, isKeyNotPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {isKeyNotPressed\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}